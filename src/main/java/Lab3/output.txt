Unexpected character: ~
Value: void  Type: VOID
Value: main  Type: identifier
Value: (  Type: left_parentheses
Value: )  Type: right_parentheses
Value: {  Type: left_bracket
Value: string  Type: STRING
Value: s  Type: identifier
Value: =  Type: assign
Value: hello  Type: string
Value: ;  Type: semicolon
Value: int  Type: INT
Value: a  Type: identifier
Value: =  Type: assign
Value: 5  Type: integer
Value: ;  Type: semicolon
Value: int  Type: INT
Value: b  Type: identifier
Value: =  Type: assign
Value: a  Type: identifier
Value: +  Type: plus
Value: 63.5  Type: decimal
Value: ;  Type: semicolon
Value: decimal  Type: DECIMAL
Value: c  Type: identifier
Value: =  Type: assign
Value: averageFromTwo  Type: identifier
Value: (  Type: left_parentheses
Value: a  Type: identifier
Value: ,  Type: comma
Value: b  Type: identifier
Value: )  Type: right_parentheses
Value: ;  Type: semicolon
Value: print  Type: identifier
Value: (  Type: left_parentheses
Value: c  Type: identifier
Value: )  Type: right_parentheses
Value: ;  Type: semicolon
Value: }  Type: right_bracket
Value: decimal  Type: DECIMAL
Value: averageFromTwo  Type: identifier
Value: (  Type: left_parentheses
Value: a  Type: identifier
Value: ,  Type: comma
Value: b  Type: identifier
Value: )  Type: right_parentheses
Value: {  Type: left_bracket
Value: average  Type: identifier
Value: =  Type: assign
Value: (  Type: left_parentheses
Value: a  Type: identifier
Value: +  Type: plus
Value: b  Type: identifier
Value: )  Type: right_parentheses
Value: /  Type: slash
Value: 2  Type: integer
Value: ;  Type: semicolon
Value: return  Type: RETURN
Value: average  Type: identifier
Value: ;  Type: semicolon
Value: }  Type: right_bracket
Value: boolean  Type: BOOLEAN
Value: isDigit  Type: identifier
Value: (  Type: left_parentheses
Value: n  Type: identifier
Value: )  Type: right_parentheses
Value: {  Type: left_bracket
Value: return  Type: RETURN
Value: n  Type: identifier
Value: >=  Type: greater_equal
Value: 0  Type: integer
Value: and  Type: AND
Value: n  Type: identifier
Value: <=  Type: less_equal
Value: 9  Type: integer
Value: ;  Type: semicolon
Value: }  Type: right_bracket
Value: int  Type: INT
Value: findMax  Type: identifier
Value: (  Type: left_parentheses
Value: a  Type: identifier
Value: ,  Type: comma
Value: b  Type: identifier
Value: )  Type: right_parentheses
Value: {  Type: left_bracket
Value: if  Type: IF
Value: (  Type: left_parentheses
Value: a  Type: identifier
Value: >  Type: greater
Value: b  Type: identifier
Value: )  Type: right_parentheses
Value: {  Type: left_bracket
Value: return  Type: RETURN
Value: a  Type: identifier
Value: ;  Type: semicolon
Value: }  Type: right_bracket
Value: else  Type: ELSE
Value: return  Type: RETURN
Value: b  Type: identifier
Value: ;  Type: semicolon
Value: }  Type: right_bracket